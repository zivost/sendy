apiVersion: v1
kind: Namespace
metadata:
  name: $NAMESPACE-$BRANCH_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME
  namespace: $NAMESPACE-$BRANCH_NAME
spec:
  selector:
    matchLabels:
      app: $SERVICE_NAME
      env: $BRANCH_NAME
  strategy:
    rollingUpdate:
      maxSurge: "200%"
      maxUnavailable: "50%"
  replicas: 1
  template:
    metadata:
      labels:
        app: $SERVICE_NAME
        env: $BRANCH_NAME
    spec:
      containers:
      - name: backend
        image: $IMAGE
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 25
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 1
        env:
          - name: "SENDY_PROTOCOL"
            value: "https"
          - name: "SENDY_FQDN"
            valueFrom:
              secretKeyRef:
                name: sendy-environment
                key: fqdn
          - name: "MYSQL_DATABASE"
            value: "sendy"
          - name: "MYSQL_HOST"
            valueFrom:
              secretKeyRef:
                name: sendy-environment
                key: sql_host
          - name: "MYSQL_USER"
            valueFrom:
              secretKeyRef:
                name: sendy-environment
                key: sql_user
          - name: "MYSQL_PORT"
            valueFrom:
              secretKeyRef:
                name: sendy-environment
                key: sql_port
          - name: "MYSQL_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: sendy-environment
                key: sql_pass
---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  namespace: $NAMESPACE-$BRANCH_NAME
  labels:
    app: $SERVICE_NAME
    env: $BRANCH_NAME
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
    name: http
  type: NodePort
  selector:
    app: $SERVICE_NAME
    env: $BRANCH_NAME
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: $SERVICE_NAME-cert
  namespace: $NAMESPACE-$BRANCH_NAME
spec:
  secretName: $BRANCH_NAME-sendy
  issuerRef:
    name: general-issuer
    kind: ClusterIssuer
  commonName: "sendy.zivost.com"
  dnsNames:
  - "sendy.zivost.com"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME
  namespace: $NAMESPACE-$BRANCH_NAME
  labels:
    app: $SERVICE_NAME
    env: $BRANCH_NAME
  annotations:
    kubernetes.io/ingress.class: "nginx"
    external-dns.alpha.kubernetes.io/hostname: "sendy.zivost.com"
    nginx.ingress.kubernetes.io/limit-connections: '10'
    nginx.ingress.kubernetes.io/limit-rpm: '50'
    nginx.ingress.kubernetes.io/limit-rps: '10'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts:
        - sendy.zivost.com
      secretName: $BRANCH_NAME-sendy
  rules:
  - host: sendy.zivost.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80